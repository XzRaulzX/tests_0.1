{
  "questions": [
   
    {
      "question": "You need to copy millions of sensitive patient records from a relational database to BigQuery. The total size of the database is 10 TB. You need to design a solution that is secure and time-efficient. What should you do?",
      "options": [
        "A. Export the records from the database as an Avro file. Upload the file to GCS using gsutil, and then load the Avro file into BigQuery using the BigQuery web UI in the GCP Console.",
        "B. Export the records from the database as an Avro file. Copy the file onto a Transfer Appliance and send it to Google, and then load the Avro file into BigQuery using the BigQuery web UI in the GCP Console.",
        "C. Export the records from the database into a CSV file. Create a public URL for the CSV file, and then use Storage Transfer Service to move the file to Cloud Storage. Load the CSV file into BigQuery using the BigQuery web UI in the GCP Console.",
        "D. Export the records from the database as an Avro file. Create a public URL for the Avro file, and then use Storage Transfer Service to move the file to Cloud Storage. Load the Avro file into BigQuery using the BigQuery web UI in the GCP Console."
      ],
      "answer": "B"
    },
    {
      "question": "You need to create a near real-time inventory dashboard that reads the main inventory tables in your BigQuery data warehouse. Historical inventory data is stored as inventory balances by item and location. You have several thousand updates to inventory every hour. You want to maximize performance of the dashboard and ensure that the data is accurate. What should you do?",
      "options": [
        "A. Leverage BigQuery UPDATE statements to update the inventory balances as they are changing.",
        "B. Partition the inventory balance table by item to reduce the amount of data scanned with each inventory update.",
        "C. Use the BigQuery streaming the stream changes into a daily inventory movement table. Calculate balances in a view that joins it to the historical inventory balance table. Update the inventory balance table nightly.",
        "D. Use the BigQuery bulk loader to batch load inventory changes into a daily inventory movement table. Calculate balances in a view that joins it to the historical inventory balance table. Update the inventory balance table nightly."
      ],
      "answer": "C"
    },
    {
      "question": "You have data stored in BigQuery. The data in the BigQuery dataset must be highly available. You need to define a storage, backup, and recovery strategy for this data that minimizes cost. How should you configure the BigQuery table that have a recovery point objective (RPO) of 30 days?",
      "options": [
        "A. Set the BigQuery dataset to be regional. In the event of an emergency, use a point-in-time snapshot to recover the data.",
        "B. Set the BigQuery dataset to be regional. Create a scheduled query to make copies of the data to tables suffixed with the time of the backup. In the event of an emergency, use the backup copy of the table.",
        "C. Set the BigQuery dataset to be multi-regional. In the event of an emergency, use a point-in-time snapshot to recover the data.",
        "D. Set the BigQuery dataset to be multi-regional. Create a scheduled query to make copies of the data to tables suffixed with the time of the backup. In the event of an emergency, use the backup copy of the table."
      ],
      "answer": "C"
    },
    {
      "question": "You used Dataprep to create a recipe on a sample of data in a BigQuery table. You want to reuse this recipe on a daily upload of data with the same schema, after the load job with variable execution time completes. What should you do?",
      "options": [
        "A. Create a cron schedule in Dataprep.",
        "B. Create an App Engine cron job to schedule the execution of the Dataprep job.",
        "C. Export the recipe as a Dataprep template, and create a job in Cloud Scheduler.",
        "D. Export the Dataprep job as a Dataflow template, and incorporate it into a Composer job."
      ],
      "answer": "D"
    },
    {
      "question": "You want to automate execution of a multi-step data pipeline running on Google Cloud. The pipeline includes Dataproc and Dataflow jobs that have multiple dependencies on each other. You want to use managed services where possible, and the pipeline will run every day. Which tool should you use?",
      "options": [
        "A. cron",
        "B. Cloud Composer",
        "C. Cloud Scheduler",
        "D. Workflow Templates on Dataproc"
      ],
      "answer": "B"
    },
    {
      "question": "You are managing a Cloud Dataproc cluster. You need to make a job run faster while minimizing costs, without losing work in progress on your clusters. What should you do?",
      "options": [
        "A. Increase the cluster size with more non-preemptible workers.",
        "B. Increase the cluster size with preemptible worker nodes, and configure them to forcefully decommission.",
        "C. Increase the cluster size with preemptible worker nodes, and use Cloud Stackdriver to trigger a script to preserve work.",
        "D. Increase the cluster size with preemptible worker nodes, and configure them to use graceful decommissioning."
      ],
      "answer": "D"
    },
    {
      "question": "You work for a shipping company that uses handheld scanners to read shipping labels. Your company has strict data privacy standards that require scanners to only transmit tracking numbers when events are sent to Kafka topics. A recent software update caused the scanners to accidentally transmit recipients' personally identifiable information (PII) to analytics systems, which violates user privacy rules. You want to quickly build a scalable solution using cloud-native managed services to prevent exposure of PII to the analytics systems. What should you do?",
      "options": [
        "A. Create an authorized view in BigQuery to restrict access to tables with sensitive data.",
        "B. Install a third-party data validation tool on Compute Engine virtual machines to check the incoming data for sensitive information.",
        "C. Use Cloud Logging to analyze the data passed through the total pipeline to identify transactions that may contain sensitive information.",
        "D. Build a Cloud Function that reads the topics and makes a call to the Cloud Data Loss Prevention (Cloud DLP) API. Use the tagging and confidence levels to either pass or quarantine the data in a bucket for review."
      ],
      "answer": "D"
    },
    {
      "question": "You have developed three data processing jobs. One executes a Cloud Dataflow pipeline that transforms data uploaded to Cloud Storage and writes results to BigQuery. The second ingests data from on-premises servers and uploads it to Cloud Storage. The third is a Cloud Dataflow pipeline that gets information from third-party data providers and uploads the information to Cloud Storage. You need to be able to schedule and monitor the execution of these three workflows and manually execute them when needed. What should you do?",
      "options": [
        "A. Create a Direct Acyclic Graph in Cloud Composer to schedule and monitor the jobs.",
        "B. Use Stackdriver Monitoring and set up an alert with a Webhook notification to trigger the jobs.",
        "C. Develop an App Engine application to schedule and request the status of the jobs using GCP API calls.",
        "D. Set up cron jobs in a Compute Engine instance to schedule and monitor the pipelines using GCP API calls."
      ],
      "answer": "A"
    },
    {
      "question": "You have Cloud Functions written in Node.js that pull messages from Cloud Pub/Sub and send the data to BigQuery. You observe that the message processing rate on the Pub/Sub topic is orders of magnitude higher than anticipated, but there is no error logged in Cloud Logging. What are the two most likely causes of this problem? (Choose two.)",
      "options": [
        "A. Publisher throughput quota is too small.",
        "B. Total outstanding messages exceed the 10-MB maximum.",
        "C. Error handling in the subscriber code is not handling run-time errors properly.",
        "D. The subscriber code cannot keep up with the messages.",
        "E. The subscriber code does not acknowledge the messages that it pulls."
      ],
      "answer": ["C","E"]
    },
    {
      "question": "You are creating a new pipeline in Google Cloud to stream IoT data from Cloud Pub/Sub through Cloud Dataflow to BigQuery. While previewing the data, you notice that roughly 2% of the data appears to be corrupt. You need to modify the Cloud Dataflow pipeline to filter out this corrupt data. What should you do?",
      "options": [
        "A. Add a SideInput that returns a Boolean if the element is corrupt.",
        "B. Add a ParDo transform in Cloud Dataflow to discard corrupt elements.",
        "C. Add a Partition transform in Cloud Dataflow to separate valid data from corrupt data.",
        "D. Add a GroupByKey transform in Cloud Dataflow to group all of the valid data together and discard the rest."
      ],
      "answer": "B"
    },
    {
      "question": "You have historical data covering the last three years in BigQuery and a data pipeline that delivers new data to BigQuery daily. You have noticed that when the Data Science team runs a query filtered on a date column and limited to 30-90 days of data, the query scans the entire table. You also noticed that your bill is increasing more quickly than you expected. You want to resolve the issue as cost-effectively as possible while maintaining the ability to conduct SQL queries. What should you do?",
      "options": [
        "A. Re-create the tables using DDL. Partition the tables by a column containing a TIMESTAMP or DATE Type.",
        "B. Recommend that the Data Science team export the table to a CSV file on Cloud Storage and use Cloud Datalab to explore the data by reading the files directly.",
        "C. Modify your pipeline to maintain the last 30-90 days of data in one table and the longer history in a different table to minimize full table scans over the entire history.",
        "D. Write an Apache Beam pipeline that creates a BigQuery table per day. Recommend that the Data Science team use wildcards on the table name suffixes to select the data they need."
      ],
      "answer": "A"
    },
    {
      "question": "You operate a logistics company, and you want to improve event delivery reliability for vehicle-based sensors. You operate small data centers around the world to capture these events, but leased lines that provide connectivity from your event collection infrastructure to your event processing infrastructure are unreliable, with unpredictable latency. You want to address this issue in the most cost-effective way. What should you do?",
      "options": [
        "A. Deploy small Kafka clusters in your data centers to buffer events.",
        "B. Have the data acquisition devices publish data to Cloud Pub/Sub.",
        "C. Establish a Cloud Interconnect between all remote data centers and Google.",
        "D. Write a Cloud Dataflow pipeline that aggregates all data in session windows."
      ],
      "answer": "B"
    },
    {
      "question": "You are a retailer that wants to integrate your online sales capabilities with different in-home assistants, such as Google Home. You need to interpret customer voice commands and issue an order to the backend systems. Which solutions should you choose?",
      "options": [
        "A. Speech-to-Text API",
        "B. Cloud Natural Language API",
        "C. Dialogflow Enterprise Edition",
        "D. AutoML Natural Language"
      ],
      "answer": "C"
    },
    {
      "question": "Your company has a hybrid cloud initiative. You have a complex data pipeline that moves data between cloud provider services and leverages services from each of the cloud providers. Which cloud-native service should you use to orchestrate the entire pipeline?",
      "options": [
        "A. Cloud Dataflow",
        "B. Cloud Composer",
        "C. Cloud Dataprep",
        "D. Cloud Dataproc"
      ],
      "answer": "B"
    },
    {
      "question": "You use a dataset in BigQuery for analysis. You want to provide third-party companies with access to the same dataset. You need to keep the costs of data sharing low and ensure that the data is current. Which solution should you choose?",
      "options": [
        "A. Use Analytics Hub to control data access, and provide third party companies with access to the dataset.",
        "B. Use Cloud Scheduler to export the data on a regular basis to Cloud Storage, and provide third-party companies with access to the bucket.",
        "C. Create a separate dataset in BigQuery that contains the relevant data to share, and provide third-party companies with access to the new dataset.",
        "D. Create a Dataflow job that reads the data in frequent time intervals, and writes it to the relevant BigQuery dataset or Cloud Storage bucket for third-party companies to use."
      ],
      "answer": "A"
    },
    {
      "question": "Your company is in the process of migrating its on-premises data warehousing solutions to BigQuery. The existing data warehouse uses trigger-based change data capture (CDC) to apply updates from multiple transactional database sources on a daily basis. With BigQuery, your company hopes to improve its handling of CDC so that changes to the source systems are available to query in BigQuery in near-real time using log-based CDC streams, while also optimizing for the performance of applying changes to the data warehouse. Which two steps should they take to ensure that changes are available in the BigQuery reporting table with minimal latency while reducing compute overhead? (Choose two.)",
      "options": [
        "A. Perform a DML INSERT, UPDATE, or DELETE to replicate each individual CDC record in real time directly on the reporting table.",
        "B. Insert each new CDC record and corresponding operation type to a staging table in real time.",
        "C. Periodically DELETE outdated records from the reporting table.",
        "D. Periodically use a DML MERGE to perform several DML INSERT, UPDATE, and DELETE operations at the same time on the reporting table.",
        "E. Insert each new CDC record and corresponding operation type in real time to the reporting table, and use a materialized view to expose only the newest version of each unique record."
      ],
      "answer": ["B","D"]
    },
    {
      "question": "You are designing a data processing pipeline. The pipeline must be able to scale automatically as load increases. Messages must be processed at least once and must be ordered within windows of 1 hour. How should you design the solution?",
      "options": [
        "A. Use Apache Kafka for message ingestion and use Cloud Dataproc for streaming analysis.",
        "B. Use Apache Kafka for message ingestion and use Cloud Dataflow for streaming analysis.",
        "C. Use Cloud Pub/Sub for message ingestion and Cloud Dataproc for streaming analysis.",
        "D. Use Cloud Pub/Sub for message ingestion and Cloud Dataflow for streaming analysis."
      ],
      "answer": "D"
    },
    {
      "question": "You need to set access to BigQuery for different departments within your company. Your solution should comply with the following requirements:\n\u2705 Each department should have access only to their data.\n\u2705 Each department will have one or more leads who need to be able to create and update tables and provide them to their team.\n\u2705 Each department has data analysts who need to be able to query but not modify data.\nHow should you set access to the data in BigQuery?",
      "options": [
        "A. Create a dataset for each department. Assign the department leads the role of OWNER, and assign the data analysts the role of WRITER on their dataset.",
        "B. Create a dataset for each department. Assign the department leads the role of WRITER, and assign the data analysts the role of READER on their dataset.",
        "C. Create a table for each department. Assign the department leads the role of Owner, and assign the data analysts the role of Editor on the project the table is in.",
        "D. Create a table for each department. Assign the department leads the role of Editor, and assign the data analysts the role of Viewer on the project the table is in."
      ],
      "answer": "B"
    },
    {
      "question": "You operate a database that stores stock trades and an application that retrieves average stock price for a given company over an adjustable window of time. The data is stored in Cloud Bigtable where the datetime of the stock trade is the beginning of the row key. Your application has thousands of concurrent users, and you notice that performance is starting to degrade as more stocks are added. What should you do to improve the performance of your application?",
      "options": [
        "A. Change the row key syntax in your Cloud Bigtable table to begin with the stock symbol.",
        "B. Change the row key syntax in your Cloud Bigtable table to begin with a random number per second.",
        "C. Change the data pipeline to use BigQuery for storing stock trades, and update your application.",
        "D. Use Cloud Dataflow to write a summary of each day's stock trades to an Avro file on Cloud Storage. Update your application to read from Cloud Storage and Cloud Bigtable to compute the responses."
      ],
      "answer": "A"
    },
    {
      "question": "You are operating a Cloud Dataflow streaming pipeline. The pipeline aggregates events from a Cloud Pub/Sub subscription source, within a window, and sinks the resulting aggregation to a Cloud Storage bucket. The source has consistent throughput. You want to monitor an alert on behavior of the pipeline with Cloud Stackdriver to ensure that it is processing data. Which Stackdriver alerts should you create?",
      "options": [
        "A. An alert based on a decrease of subscription/num_undelivered_messages for the source and a rate of change increase of instance/storage/used_bytes for the destination",
        "B. An alert based on an increase of subscription/num_undelivered_messages for the source and a rate of change decrease of instance/storage/used_bytes for the destination",
        "C. An alert based on a decrease of instance/storage/used_bytes for the source and a rate of change increase of subscription/num_undelivered_messages for the destination",
        "D. An alert based on an increase of instance/storage/used_bytes for the source and a rate of change decrease of subscription/num_undelivered_messages for the destination"
      ],
      "answer": "B"
    },
    {
      "question": "You currently have a single on-premises Kafka cluster in a data center in the us-east region that is responsible for ingesting messages from IoT devices globally. Because large parts of the globe have poor internet connectivity, messages sometimes batch at the edge, come in all at once, and cause a spike in load on your Kafka cluster. This is becoming difficult to manage and prohibitively expensive. What is the Google-recommended cloud native architecture for this scenario?",
      "options": [
        "A. Edge TPUs as sensor devices for storing and transmitting the messages.",
        "B. Cloud Dataflow connected to the Kafka cluster to scale the processing of incoming messages.",
        "C. An IoT gateway connected to Cloud Pub/Sub, with Cloud Dataflow to read and process the messages from Cloud Pub/Sub.",
        "D. A Kafka cluster virtualized on Compute Engine in us-east with Cloud Load Balancing to connect to the devices around the world."
      ],
      "answer": "C"
    },
    {
      "question": "You decided to use Cloud Datastore to ingest vehicle telemetry data in real time. You want to build a storage system that will account for the long-term data growth, while keeping the costs low. You also want to create snapshots of the data periodically, so that you can make a point-in-time (PIT) recovery, or clone a copy of the data for Cloud Datastore in a different environment. You want to archive these snapshots for a long time. Which two methods can accomplish this? (Choose two.)",
      "options": [
        "A. Use managed export, and store the data in a Cloud Storage bucket using Nearline or Coldline class.",
        "B. Use managed export, and then import to Cloud Datastore in a separate project under a unique namespace reserved for that export.",
        "C. Use managed export, and then import the data into a BigQuery table created just for that export, and delete temporary export files.",
        "D. Write an application that uses Cloud Datastore client libraries to read all the entities. Treat each entity as a BigQuery table row via BigQuery streaming insert. Assign an export timestamp for each export, and attach it as an extra column for each row. Make sure that the BigQuery table is partitioned using the export timestamp column.",
        "E. Write an application that uses Cloud Datastore client libraries to read all the entities. Format the exported data into a JSON file. Apply compression before storing the data in Cloud Source Repositories."
      ],
      "answer": [
        "A",
        "B"
      ]
    },
    {
      "question": "You need to create a data pipeline that copies time-series transaction data so that it can be queried from within BigQuery by your data science team for analysis. Every hour, thousands of transactions are updated with a new status. The size of the initial dataset is 1.5 PB, and it will grow by 3 TB per day. The data is heavily structured, and your data science team will build machine learning models based on this data. You want to maximize performance and usability for your data science team. Which two strategies should you adopt? (Choose two.)",
      "options": [
        "A. Denormalize the data as much as possible.",
        "B. Preserve the structure of the data as much as possible.",
        "C. Use BigQuery UPDATE to further reduce the size of the dataset.",
        "D. Develop a data pipeline where status updates are appended to BigQuery instead of updated.",
        "E. Copy a daily snapshot of transaction data to Cloud Storage and store it as an Avro file. Use BigQuery's support for external data sources to query."
      ],
      "answer": [
        "A",
        "D"
      ]
    },
    {
      "question": "You are designing a cloud-native historical data processing system to meet the following conditions: ✑ The data being analyzed is in CSV, Avro, and PDF formats and will be accessed by multiple analysis tools including Dataproc, BigQuery, and Compute Engine. ✑ A batch pipeline moves daily data. ✑ Performance is not a factor in the solution. ✑ The solution design should maximize availability. How should you design data storage for this solution?",
      "options": [
        "A. Create a Dataproc cluster with high availability. Store the data in HDFS, and perform analysis as needed.",
        "B. Store the data in BigQuery. Access the data using the BigQuery Connector on Dataproc and Compute Engine.",
        "C. Store the data in a regional Cloud Storage bucket. Access the bucket directly using Dataproc, BigQuery, and Compute Engine.",
        "D. Store the data in a multi-regional Cloud Storage bucket. Access the data directly using Dataproc, BigQuery, and Compute Engine."
      ],
      "answer": "D"
    },

    {
  "question": "You have a petabyte of analytics data and need to design a storage and processing platform for it. You must be able to perform data warehouse-style analytics on the data in Google Cloud and expose the dataset as files for batch analysis tools in other cloud providers. What should you do?",
  "options": [
    "A. Store and process the entire dataset in BigQuery.",
    "B. Store and process the entire dataset in Bigtable.",
    "C. Store the full dataset in BigQuery, and store a compressed copy of the data in a Cloud Storage bucket.",
    "D. Store the warm data as files in Cloud Storage, and store the active data in BigQuery. Keep this ratio as 80% warm and 20% active."
  ],
  "answer": "C"
  },
  {
    "question": "You work for a manufacturing company that sources up to 750 different components, each from a different supplier. You've collected a labeled dataset that has on average 1000 examples for each unique component. Your team wants to implement an app to help warehouse workers recognize incoming components based on a photo of the component. You want to implement the first working version of this app (as Proof-Of-Concept) within a few working days. What should you do?",
    "options": [
      "A. Use Cloud Vision AutoML with the existing dataset.",
      "B. Use Cloud Vision AutoML, but reduce your dataset twice.",
      "C. Use Cloud Vision API by providing custom labels as recognition hints.",
      "D. Train your own image recognition model leveraging transfer learning techniques."
    ],
    "answer": "A"
  },
  {
    "question": "You are working on a niche product in the image recognition domain. Your team has developed a model that is dominated by custom C++ TensorFlow ops your team has implemented. These ops are used inside your main training loop and are performing bulky matrix multiplications. It currently takes up to several days to train a model. You want to decrease this time significantly and keep the cost low by using an accelerator on Google Cloud. What should you do?",
    "options": [
      "A. Use Cloud TPUs without any additional adjustment to your code.",
      "B. Use Cloud TPUs after implementing GPU kernel support for your customs ops.",
      "C. Use Cloud GPUs after implementing GPU kernel support for your customs ops.",
      "D. Stay on CPUs, and increase the size of the cluster you're training your model on."
    ],
    "answer": "C"
  },
  {
    "question": "You work on a regression problem in a natural language processing domain, and you have 100M labeled examples in your dataset. You have randomly shuffled your data and split your dataset into train and test samples (in a 90/10 ratio). After you trained the neural network and evaluated your model on a test set, you discover that the root-mean-squared error (RMSE) of your model is twice as high on the train set as on the test set. How should you improve the performance of your model?",
    "options": [
      "A. Increase the share of the test sample in the train-test split.",
      "B. Try to collect more data and increase the size of your dataset.",
      "C. Try out regularization techniques (e.g., dropout of batch normalization) to avoid overfitting.",
      "D. Increase the complexity of your model by, e.g., introducing an additional layer or increasing the size of vocabularies or n-grams used."
    ],
    "answer": "D"
  },
  {
    "question": "You use BigQuery as your centralized analytics platform. New data is loaded every day, and an ETL pipeline modifies the original data and prepares it for the final users. This ETL pipeline is regularly modified and can generate errors, but sometimes the errors are detected only after 2 weeks. You need to provide a method to recover from these errors, and your backups should be optimized for storage costs. How should you organize your data in BigQuery and store your backups?",
    "options": [
      "A. Organize your data in a single table, export, compress and store the BigQuery data in Cloud Storage.",
      "B. Organize your data in separate tables for each month, and export, compress, and store the data in Cloud Storage.",
      "C. Organize your data in separate tables for each month, and duplicate your data on a separate dataset in BigQuery.",
      "D. Organize your data in separate tables for each month, and use snapshot decorators to restore the table to a time prior to the corruption."
    ],
    "answer": "B"
  },
  {
    "question": "The marketing team at your organization provides regular updates of a segment of your customer dataset. The marketing team has given you a CSV with 1 million records that must be updated in BigQuery. When you use the UPDATE statement in BigQuery, you receive a quotaExceeded error. What should you do?",
    "options": [
      "A. Reduce the number of records updated each day to stay within the BigQuery UPDATE DML statement limit.",
      "B. Increase the BigQuery UPDATE DML statement limit in the Quota management section of the Google Cloud Platform Console.",
      "C. Split the source CSV file into smaller CSV files in Cloud Storage to reduce the number of BigQuery UPDATE DML statements per BigQuery job.",
      "D. Import the new records from the CSV file into a new BigQuery table. Create a BigQuery job that merges the new records with the existing records and writes the results to a new BigQuery table."
    ],
    "answer": "D"
  }

  
  ]
}
